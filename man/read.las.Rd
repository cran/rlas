% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readLAS.r
\name{read.las}
\alias{read.las}
\title{Read data from a .las or .laz file}
\usage{
read.las(files, select = "*", filter = "")
}
\arguments{
\item{files}{array of characters}

\item{select}{character. select only columns of interest to save memory (see details)}

\item{filter}{character. streaming filters - filter data while reading the file (see details)}
}
\value{
A \code{data.table}
}
\description{
Reads data from .las or .laz files in format 1 to 4 according to LAS specifications and returns
a \code{data.table} labeled according to LAS specifications. See the ASPRS documentation for the
\href{http://www.asprs.org/a/society/committees/standards/LAS_1_4_r13.pdf}{LAS file format}.
The optional parameters enable the user to save memory by choosing to load only the
fields they need. Moreover, the function provides a streaming filter to load only the points of
interest into the memory and hence avoids allocating any superfluous memory.
}
\details{
\strong{Select:} the 'select' argument specifies the data that will actually be loaded. For example,
'xyzia' means that the x, y, and z coordinates, the intensity and the scan angle will be loaded.
The supported entries are t - gpstime, a - scan angle, i - intensity, n - number of returns,
r - return number, c - classification, u - user data, p - point source ID, e - edge of
flight line flag, d - direction of scan flag, R - red channel of RGB color, G - green
channel of RGB color, B - blue channel of RGB color, N - near-infrared channel. Also numbers from
1 to 9 for the extra bytes data numbers 1 to 9. 0 enables all extra bytes to be loaded and '*' is the
wildcard that enables everything to be loaded from the LAS file. \cr
Note that x, y, z are implicit and always loaded. 'xyzia' is equivalent to 'ia'.\cr\cr
\strong{Filter:} the 'filter' argument allows filtering of the point cloud while reading files.
\code{rlas} relies on the well-known \code{LASlib} library written by Martin Isenburg
to read the binary files. Thus the package inherits the filter commands available in
\href{https://rapidlasso.com/lastools/}{LAStools}. To use these filters the user can pass the
common commands from \code{LAStools} into the parameter \code{'filter'}. Type \code{rlas:::lasfilterusage()} to display the \code{LASlib} documentation and the available filters.
}
\examples{
lazfile <- system.file("extdata", "example.laz", package="rlas")

lasdata <- read.las(lazfile)
lasdata <- read.las(lazfile, filter = "-keep_first")
lasdata <- read.las(lazfile, filter = "-drop_intensity_below 80")
lasdata <- read.las(lazfile, select = "xyzia")
}
